# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

orbs:
  snyk: snyk/snyk@2.0.2
  gradle: circleci/gradle@3.0.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
# Build job example --> https://github.com/discospiff/MyPlantDiary32/blob/master/.circleci/config.yml
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-30
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
      - run:
          name: chmod permissions
          command: chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
      - run:
          name: Run Tests
          command: ./gradlew lint test
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results

  sonarqube:
      working_directory: ~/build
      docker:
        - image: sonarsource/sonar-scanner-cli
      resource_class: small
      steps:
        - run: apk update
        - run: apk upgrade
        - run: apk --no-cache add --update openssh git curl
        - checkout
        - run: find .
        - attach_workspace:
            at: ~/workspace
        - run: |
            SONAR_BRANCH="${CIRCLE_BRANCH:-main}"
            echo "Sonar branch value is: " $SONAR_BRANCH
            echo "Sonar org value is : " $SONAR_ORGANIZATION
            sonar-scanner \
            -Dsonar.projectKey="$SONAR_PROJECT_KEY" \
            -Dsonar.organization="$SONAR_ORGANIZATION" \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.exclusions="**/android/**,**/ios/**" \
            -Dsonar.login="$SONAR_TOKEN" \
            -Dsonar.branch.name="$SONAR_BRANCH" \
            -Dsonar.sources="."


# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - build
      - sonarqube
